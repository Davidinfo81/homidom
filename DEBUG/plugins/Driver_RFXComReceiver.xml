<?xml version="1.0"?>
<doc>
<assembly>
<name>
Driver_RFXComReceiver
</name>
</assembly>
<members>
<member name="P:Driver_RFXComReceiver.My.Resources.Resources.ResourceManager">
	<summary>
  Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
</summary>
</member><member name="P:Driver_RFXComReceiver.My.Resources.Resources.Culture">
	<summary>
  Remplace la propriété CurrentUICulture du thread actuel pour toutes
  les recherches de ressources à l'aide de cette classe de ressource fortement typée.
</summary>
</member><member name="T:Driver_RFXComReceiver.My.Resources.Resources">
	<summary>
  Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
</summary>
</member><member name="M:Driver_RFXComReceiver.Driver_RFXComReceiver.Start">
	<summary>Démarrer le du driver</summary>
	<remarks></remarks>
</member><member name="M:Driver_RFXComReceiver.Driver_RFXComReceiver.Stop">
	<summary>Arrêter le du driver</summary>
	<remarks></remarks>
</member><member name="M:Driver_RFXComReceiver.Driver_RFXComReceiver.Restart">
	<summary>Re-Démarrer le du driver</summary>
	<remarks></remarks>
</member><member name="M:Driver_RFXComReceiver.Driver_RFXComReceiver.Read(System.Object)">
	<summary>Intérroger un device</summary>
	<param name="Objet">Objet représetant le device à interroger</param>
	<remarks>pas utilisé</remarks>
</member><member name="M:Driver_RFXComReceiver.Driver_RFXComReceiver.Write(System.Object,System.String,System.Object,System.Object)">
	<summary>Commander un device</summary>
	<param name="Objet">Objet représetant le device à interroger</param>
	<param name="Command">La commande à passer</param>
	<param name="Parametre1"></param>
	<param name="Parametre2"></param>
	<remarks></remarks>
</member><member name="M:Driver_RFXComReceiver.Driver_RFXComReceiver.DeleteDevice(System.String)">
	<summary>Fonction lancée lors de la suppression d'un device</summary>
	<param name="DeviceId">Objet représetant le device à interroger</param>
	<remarks></remarks>
</member><member name="M:Driver_RFXComReceiver.Driver_RFXComReceiver.NewDevice(System.String)">
	<summary>Fonction lancée lors de l'ajout d'un device</summary>
	<param name="DeviceId">Objet représetant le device à interroger</param>
	<remarks></remarks>
</member><member name="M:Driver_RFXComReceiver.Driver_RFXComReceiver.#ctor">
	<summary>Creation d'un objet de type</summary>
	<remarks></remarks>
</member><member name="M:Driver_RFXComReceiver.Driver_RFXComReceiver.TimerTick">
	<summary>Si refresh &gt;0 gestion du timer</summary>
	<remarks>PAS UTILISE CAR IL FAUT LANCER UN TIMER QUI LANCE/ARRETE CETTE FONCTION dans Start/Stop</remarks>
</member><member name="M:Driver_RFXComReceiver.Driver_RFXComReceiver.ouvrir(System.String)">
	<summary>Ouvrir le port COM/ETHERNET</summary>
	<param name="numero">Nom/Numero du port COM/Adresse IP: COM2</param>
	<remarks></remarks>
</member><member name="M:Driver_RFXComReceiver.Driver_RFXComReceiver.lancer">
	<summary>Lances les handlers sur le port</summary>
	<remarks></remarks>
</member><member name="M:Driver_RFXComReceiver.Driver_RFXComReceiver.configurer">
	<summary>Configurer le RFXCOM</summary>
	<remarks></remarks>
</member><member name="M:Driver_RFXComReceiver.Driver_RFXComReceiver.fermer">
	<summary>Ferme la connexion au port</summary>
	<remarks></remarks>
</member><member name="M:Driver_RFXComReceiver.Driver_RFXComReceiver.ecrire(System.Byte,System.Byte)">
	<summary>ecrire sur le port</summary>
	<param name="commande">premier paquet à envoyer</param>
	<param name="commande2">deuxieme paquet à envoyer</param>
	<remarks></remarks>
</member><member name="M:Driver_RFXComReceiver.Driver_RFXComReceiver.DataReceived(System.Object,System.IO.Ports.SerialDataReceivedEventArgs)">
	<summary>Executer lors de la reception d'une donnée sur le port</summary>
	<remarks></remarks>
</member><member name="M:Driver_RFXComReceiver.Driver_RFXComReceiver.ReadErrorEvent(System.Object,System.IO.Ports.SerialErrorReceivedEventArgs)">
	<summary>Executer lors de la reception d'une erreur sur le port</summary>
	<remarks></remarks>
</member><member name="M:Driver_RFXComReceiver.Driver_RFXComReceiver.TCPDataReceived(System.IAsyncResult)">
	<summary>Executer lors de la reception d'une donnée sur le port IP</summary>
	<remarks></remarks>
</member><member name="M:Driver_RFXComReceiver.Driver_RFXComReceiver.ProcessNewTCPData(System.Byte[],System.Int32,System.Int32)">
	<summary>Traite les données IP recu</summary>
	<remarks></remarks>
</member><member name="M:Driver_RFXComReceiver.Driver_RFXComReceiver.tmrRead_Elapsed(System.Object,System.EventArgs)">
	<summary>xxx</summary>
	<remarks></remarks>
</member><member name="M:Driver_RFXComReceiver.Driver_RFXComReceiver.ProcessReceivedChar(System.Byte)">
	<summary>Rassemble un message complet pour ensuite l'envoyer à displaymess</summary>
	<param name="temp">Byte recu</param>
	<remarks></remarks>
</member><member name="M:Driver_RFXComReceiver.Driver_RFXComReceiver.display_mess">
	<summary>Decode le message pour l'envoyer aux bonnes fonctions de traitement</summary>
	<remarks></remarks>
</member><member name="T:Driver_RFXComReceiver.Driver_RFXComReceiver">
	<summary>Class Driver_RFXComReceiver, permet de communiquer avec un RFXCOM Ethernet ou USB</summary>
	<remarks>Pour la version USB, necessite l'installation du driver USB RFXCOM</remarks>
</member>
</members>
</doc>