<?xml version="1.0"?>
<doc>
<assembly>
<name>
HoMIWpF
</name>
</assembly>
<members>
<member name="M:HoMIWpF.uEditValue.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:HoMIWpF.uEditValue">
	<summary>
uEditValue
</summary>
</member><member name="M:HoMIWpF.uKeyPad.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:HoMIWpF.uKeyPad">
	<summary>
uKeyPad
</summary>
</member><member name="M:HoMIWpF.WCalendar.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:HoMIWpF.WCalendar">
	<summary>
WCalendar
</summary>
</member><member name="M:HoMIWpF.uWidgetEmpty.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:HoMIWpF.uWidgetEmpty">
	<summary>
uWidgetEmpty
</summary>
</member><member name="M:HoMIWpF.uModule.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:HoMIWpF.uModule">
	<summary>
uModule
</summary>
</member><member name="M:HoMIWpF.XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
	<summary>
CreateInstance
</summary>
</member><member name="M:HoMIWpF.XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
	<summary>
GetPropertyValue
</summary>
</member><member name="M:HoMIWpF.XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
	<summary>
SetPropertyValue
</summary>
</member><member name="M:HoMIWpF.XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
	<summary>
CreateDelegate
</summary>
</member><member name="M:HoMIWpF.XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
	<summary>
AddEventHandler
</summary>
</member><member name="T:HoMIWpF.XamlGeneratedNamespace.GeneratedInternalTypeHelper">
	<summary>
GeneratedInternalTypeHelper
</summary>
</member><member name="M:HoMIWpF.uLog.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:HoMIWpF.uLog">
	<summary>
uLog
</summary>
</member><member name="M:HoMIWpF.keyboard.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:HoMIWpF.keyboard">
	<summary>
keyboard
</summary>
</member><member name="M:HoMIWpF.uMeteo.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:HoMIWpF.uMeteo">
	<summary>
uMeteo
</summary>
</member><member name="M:HoMIWpF.uInternet.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:HoMIWpF.uInternet">
	<summary>
uInternet
</summary>
</member><member name="M:HoMIWpF.uCamera.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:HoMIWpF.uCamera">
	<summary>
uCamera
</summary>
</member><member name="M:HoMIWpF.uTelecommande.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:HoMIWpF.uTelecommande">
	<summary>
uTelecommande
</summary>
</member><member name="M:HoMIWpF.WMedia.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:HoMIWpF.WMedia">
	<summary>
WMedia
</summary>
</member><member name="M:HoMIWpF.uOnOff.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:HoMIWpF.uOnOff">
	<summary>
uOnOff
</summary>
</member><member name="M:HoMIWpF.uReleve.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:HoMIWpF.uReleve">
	<summary>
uReleve
</summary>
</member><member name="M:HoMIWpF.Customcontrols.Colorpicker.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:HoMIWpF.Customcontrols.Colorpicker">
	<summary>
Colorpicker
</summary>
</member><member name="M:HoMIWpF.uVariateur.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:HoMIWpF.uVariateur">
	<summary>
uVariateur
</summary>
</member><member name="M:HoMIWpF.uRSS.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:HoMIWpF.uRSS">
	<summary>
uRSS
</summary>
</member><member name="M:HoMIWpF.uMeteos.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:HoMIWpF.uMeteos">
	<summary>
uMeteos
</summary>
</member><member name="M:HoMIWpF.uHttp.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:HoMIWpF.uHttp">
	<summary>
uHttp
</summary>
</member><member name="M:HoMIWpF.uWMeteo.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:HoMIWpF.uWMeteo">
	<summary>
uWMeteo
</summary>
</member><member name="M:HoMIWpF.Application.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="M:HoMIWpF.Application.Main">
	<summary>
Application Entry Point.
</summary>
</member><member name="T:HoMIWpF.Application">
	<summary>
Application
</summary>
</member><member name="M:HoMIWpF.uFreeBox.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:HoMIWpF.uFreeBox">
	<summary>
uFreeBox
</summary>
</member><member name="M:HoMIWpF.WindowImg.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:HoMIWpF.WindowImg">
	<summary>
WindowImg
</summary>
</member><member name="M:HoMIWpF.WWidgetProperty.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:HoMIWpF.WWidgetProperty">
	<summary>
WWidgetProperty
</summary>
</member><member name="M:HoMIWpF.WConfig.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:HoMIWpF.WConfig">
	<summary>
WConfig
</summary>
</member><member name="M:HoMIWpF.uModules.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:HoMIWpF.uModules">
	<summary>
uModules
</summary>
</member><member name="M:HoMIWpF.uMedia.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:HoMIWpF.uMedia">
	<summary>
uMedia
</summary>
</member><member name="M:HoMIWpF.Window1.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:HoMIWpF.Window1">
	<summary>
Window1
</summary>
</member><member name="M:HoMIWpF.uHisto.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:HoMIWpF.uHisto">
	<summary>
uHisto
</summary>
</member><member name="M:HoMIWpF.uCtrlImgMnu.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:HoMIWpF.uCtrlImgMnu">
	<summary>
uCtrlImgMnu
</summary>
</member><member name="T:HoMIWpF.Customcontrols.Colorpicker">
	<summary>
 Interaction logic for Colorpicker.xaml
 </summary>
</member><member name="M:HoMIWpF.clsXML.#ctor(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Constructeur de la classe
 </summary>
	<param name="leFichier"></param>
	<remarks>
 leFichier doit obligatoirement être un fichier existant
 </remarks>
	<history>
 	[Gabriel]	10/05/2005	Created
     [Gabriel]   06/06/2009  Updated
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:HoMIWpF.clsXML.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Constructeur de la classe
 </summary>
	<remarks>
 Ne nécessite pas de fichier xml existant
 </remarks>
	<history>
 	[Gabriel]	10/05/2005	Created
     [Gabriel]   06/06/2009  Updated
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:HoMIWpF.clsXML.leFichier">
 -----------------------------------------------------------------------------
 <summary>
 définit/retourne le nom du fichier
 </summary>
	<value>Un fichier .xml existant</value>
	<remarks>
 Veillez à indiquer un fichier XML existant!
 </remarks>
	<history>
 	[Gabriel]	10/05/2005	Created
     [Gabriel]   06/06/2009  Updated
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:HoMIWpF.clsXML.SelectValue(System.String)">
	<summary>
 Retourne la valeur du premier noeud correspondant à la requête XPath.
 Cette fonction devrait être la plus utilisée car elle permet de retourner le résultat de n'importe quelle requête XPath.
 Quelques exemples qui montrent la puissance de XPath :
 /cd/piste[5]/titre/text() renvoie le titre de la piste 5
 /cd/piste[@numero='3']/titre renvoie le titre de la piste dont l'attribut numéro est '3'
 /cd[artiste='Pink Floyd'][3]/piste[5]/titre renvoie le titre de la 5ème piste du 3ème CD ayant "Pink Floyd" comme artiste.
 /cd[artiste='Pink Floyd' and id='PF004']/piste[2]/duree renvoie la durée de la seconde piste du CD de Pink Floyd ayant l'ID 'PF004'
 </summary>
	<param name="query">Une requête XPath de sélection</param>
	<returns>Une chaine de caractère contenant la valeur du noeud</returns>
	<remarks></remarks>
	<history>
     [Gabriel]   06/06/2009  Created
 </history>
</member><member name="M:HoMIWpF.clsXML.SetNode(System.String,System.Xml.XmlNode,System.Int32)">
	<summary>
 Remplace le premier noeud correspondant à la requête XPath par un nouveau.
 </summary>
	<param name="xpath">Une requête XPath de sélection</param>
	<param name="node">Un noeud (XmlNode)</param>
	<remarks></remarks>
	<history>
     [Gabriel]   06/06/2009  Created
 </history>
</member><member name="M:HoMIWpF.clsXML.SelectFirstNode(System.String)">
	<summary>
 Retourne le premier noeud correspondant à la requête XPath, Nothing si aucun noeud n'est trouvé
 </summary>
	<param name="xpath">La requête XPath</param>
	<returns>Un noeud (XmlNode)</returns>
	<remarks></remarks>
	<history>
     [Gabriel]   06/06/2009  Created
 </history>
</member><member name="M:HoMIWpF.clsXML.SelectNodes(System.String)">
	<summary>
 Retourne la liste des noeuds correspondants à la requête XPath ou Nothing si rien n'est trouvé
 </summary>
	<param name="xpath">Une requête XPath</param>
	<returns>Une liste de noeuds (XmlNodeList)</returns>
	<remarks></remarks>
	<history>
     [Gabriel]   06/06/2009  Created
 </history>
</member><member name="M:HoMIWpF.clsXML.getElementValue(System.String,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Objectif : Renvoie la valeur du n-ème élément pointé par la requête XPath
 Attention : Le premier noeud possède l'index 1
 </summary>
	<param name="xpath">Une requête XPath</param>
	<param name="index">L'index de l'élément</param>
	<returns>Chaine de caractères</returns>
	<remarks>
 Utilisation |
 exemple 1 : getElementValue("/polygone/point", 2) renvoie la valeur du 2ème "point" de "polygone" |
 exemple 2 : getElementValue("/polygone/point[2]") renvoie la même chose
 </remarks>
	<history>
 	[Gabriel]	10/05/2005	Created
     [Gabriel]   06/06/2009  Updated
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:HoMIWpF.clsXML.setElementValue(System.String,System.String,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Ecrit la valeur pour le n-ième élément pointé par la requête path
 Attention : Le premier noeud possède l'index 1
 </summary>
	<param name="xpath">Une requête XPath</param>
	<param name="valeur">La valeur à écrire</param>
	<param name="index">L'index de l'élément dans lequel écrire</param>
	<remarks>
 Utilisation |
 exemple 1 : setElementValue("/polygone/point", "30;40", 5) spécifie que le 5ème élément "point" de "polygone" aura comme valeur "(30;40)" |
 exemple 2 : setElementValue("/polygone/point[5]", "30;40") fait exactement la même chose.
 </remarks>
	<history>
 	[Gabriel]	10/05/2005	Created
     [Gabriel]   06/06/2009  Updated
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:HoMIWpF.clsXML.addElement(System.String,System.String,System.String,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Ajoute un element pointé par le n-ième noeud de la requête XPath
 Attention : Le premier noeud possède l'index 1
 </summary>
	<param name="xpath">Une requête XPath</param>
	<param name="nom">Le nom de l'élément à ajouter</param>
	<param name="valeur">La valeur de l'élément à ajouter</param>
	<param name="index">L'index de l'élément parent dans lequel on ajoute l'élément enfant "nom"</param>
	<remarks>
 Utilisation |
 exemple 1 : addElement("/cd/piste", "titre", "54 Cymru beats", 5) ajoute un élément enfant "titre" au 5ème élément "piste", sa valeur sera "54 Cymru beats" |
 exemple 2 : addElement("/cd/piste[5]", "titre", "54 Cymru beats") fait exactement la même chose.
 </remarks>
	<history>
 	[Gabriel]	10/05/2005	Created
     [Gabriel]   06/06/2009  Updated
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:HoMIWpF.clsXML.deleteElement(System.String,System.String,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 supprime le n-ième element pointé par la requête XPath
 Attention : Le premier noeud possède l'index 1
 </summary>
	<param name="xpath">Une requête XPath</param>
	<param name="nom">Le nom de l'élément à supprimer</param>
	<param name="index">L'index de l'élément à supprimer</param>
	<remarks>
 Utilisation |
 exemple : deleteElement("/cd", "piste", 3) supprime le 3ème élément "piste"
 </remarks>
	<history>
 	[Gabriel]	10/05/2005	Created
     [Gabriel]   06/06/2009  Updated
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:HoMIWpF.clsXML.deleteElement(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 supprime le 1er élément pointé par la requête XPath
 Attention : Le premier noeud possède l'index 1
 </summary>
	<param name="xpath">Une requête XPath</param>
	<remarks>
 Utilisation |
 exemple 1 : deleteElement("/cd/piste[3]) supprime le 3ème élément "piste"
 exemple 2 : deleteElement("/cd/piste) supprime la première piste uniquement
 </remarks>
	<history>
 	[Gabriel]	10/05/2005	Created
     [Gabriel]   06/06/2009  Updated
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:HoMIWpF.clsXML.addAttribute(System.String,System.String,System.String,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Ajoute un attribut "nom" de valeur "valeur" n-ième élément pointé par la requête XPath
 Attention : Le premier noeud possède l'index 1
 </summary>
	<param name="xpath">Une requête XPath</param>
	<param name="nom">Le nom de l'attribut à ajouter</param>
	<param name="valeur">La valeur de l'attribut à ajouter</param>
	<param name="index">L'index de l'élément auquel on ajoute l'attribut</param>
	<remarks>
 Utilisation |
 exemple 1 : addAttribute("/cd/piste","numero", "3", 5) ajoute l'attribut "numero" de valeur "3" au 5ème élément "piste" du "cd"
 exemple 2 : addAttribute("/cd/piste[5]","numero", "3") fait la même chose.
 </remarks>
	<history>
 	[Gabriel]	10/05/2005	Created
     [Gabriel]   06/06/2009  Updated
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:HoMIWpF.clsXML.setAttribute(System.String,System.String,System.String,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Affecte à l'attribut "nom" la valeur "valeur" au n-ième élément pointé par la requête "path"
 Attention : Le premier noeud possède l'index 1
 </summary>
	<param name="xpath">Une requête XPath</param>
	<param name="nom">Le nom de l'attribut à affecter</param>
	<param name="valeur">La nouvelle valeur de l'attribut</param>
	<param name="index">L'index de l'élément auquel on affecte la nouvelle valeur de l'attribut</param>
	<remarks>
 Utilisation |
 exemple 1 : setAttribute("/cd/piste","numero", "3", 5) définit l'attribut "numero" du 5ème élément "piste" de "cd" à la valeur "3"
 exemple 2 : setAttribute("/cd/piste[5]","numero", "3") fait exactement la même chose
 </remarks>
	<history>
 	[Gabriel]	10/05/2005	Created
     [Gabriel]   06/06/2009  Updated
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:HoMIWpF.clsXML.getAttribute(System.String,System.String,System.String,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Retourne la valeur de l'attribut "nom" du n-ième élément pointé par la requête "XPath"
 Attention : Le premier noeud possède l'index 1
 </summary>
	<param name="xpath">Une requête XPath</param>
	<param name="nom">Le nom de l'attribut dont la valeur sera retournée</param>
	<param name="index">L'index de l'élément auquel appartient l'attribut</param>
	<returns>La valeur de l'attribut sélectionné</returns>
	<remarks>
 Utilisation |
 exemple 1 : getAttribute("/cd/piste","numero", 5) retourne la valeur de l'attribut "numero" du 5ème élément "piste" de "cd"
 exemple 2 : getAttribute("/cd/piste[5]","numero") fait la même chose.
 </remarks>
	<history>
 	[Gabriel]	10/05/2005	Created
     [Gabriel]   06/06/2009  Updated
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:HoMIWpF.clsXML.createRoot(System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Ajoute l'element racine "nom"
 </summary>
	<param name="nom">Le nom de l'élément racine qui sera créé</param>
	<remarks>
 Utilisation | exemple : createRoot("Bibliothèque")
 </remarks>
	<history>
 	[Gabriel]	10/05/2005	Created
     [Gabriel]   06/06/2009  Updated
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:HoMIWpF.clsXML.createNewFile(System.String)">

 -----------------------------------------------------------------------------
 <summary>
 Crée un nouveau fichier vierge
 </summary>
	<param name="nomFichier">[Chemin et ] Nom du fichier</param>
	<remarks>
 Veiller à ce que le fichier n'existe pas déjà sous peine d'écrasement de l'existant
 </remarks>
	<history>
 	[Gabriel]	10/05/2005	Created
     [Gabriel]   06/06/2009  Updated
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:HoMIWpF.clsXML.getFormatedXMLString">
 -----------------------------------------------------------------------------
 <summary>
 Permet de renvoyer sous forme de chaine le contenu du fichier XML.
 </summary>
	<returns>Une chaine de caractères</returns>
	<remarks>
 Le document contient des retours à la ligne pour une meilleure lecture
 </remarks>
	<history>
 	[Gabriel]	10/05/2005	Created
     [Gabriel]   06/06/2009  Updated
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:HoMIWpF.clsXML.getIndexOfElementContaining(System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Renvoie l'index de l'élément pointé par XPath et de valeur valeur, -1 si pas trouvé
 Attention : Le premier noeud possède l'index 1
 </summary>
	<param name="xpath">Une requête XPath</param>
	<param name="valeur">La valeur à rechercher</param>
	<returns>Un entier</returns>
	<remarks>
	</remarks>
	<history>
 	[Gabriel]	10/05/2005	Created
     [Gabriel]   06/06/2009  Updated
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:HoMIWpF.clsXML.countElements(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Renvoie le nombre d'éléments pointés par XPath
 </summary>
	<param name="xpath"></param>
	<returns>Un entier</returns>
	<remarks>
	</remarks>
	<history>
 	[Gabriel]	10/05/2005	Created
     [Gabriel]   06/06/2009  Updated
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:HoMIWpF.Window1.LoadConfig(System.String)">
	<summary>Chargement de la config depuis le fichier XML</summary>
	<param name="Fichier"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:HoMIWpF.Window1.SaveConfig(System.String)">
	<summary>Sauvegarde de la config dans le fichier XML</summary>
	<remarks></remarks>
</member><member name="P:HoMIWpF.Window1.FichierLog">
	<summary>
 Permet de connaître le chemin du fichier log
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:HoMIWpF.Window1.MaxFileSize">
	<summary>
 Retourne/Fixe la Taille max du fichier log en Ko
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:HoMIWpF.Window1.TypeLog">
	<summary>Indique le type du Log: si c'est une erreur, une info, un message...</summary>
	<remarks></remarks>
</member><member name="T:HoMIWpF.Window1.TypeSource">
	<summary>Indique la source du log si c'est le serveur, un script, un device...</summary>
	<remarks></remarks>
</member><member name="M:HoMIWpF.Window1.Log(HoMIWpF.Window1.TypeLog,HoMIWpF.Window1.TypeSource,System.String,System.String)">
	<summary>Ecrit un log dans le fichier log au format xml</summary>
	<param name="TypLog"></param>
	<param name="Source"></param>
	<param name="Fonction"></param>
	<param name="Message"></param>
	<remarks></remarks>
</member><member name="M:HoMIWpF.Window1.CreateNewFileLog(System.String)">
	<summary>Créer nouveau Fichier (donner chemin complet et nom) log</summary>
	<param name="NewFichier"></param>
	<remarks></remarks>
</member><member name="M:HoMIWpF.Window1.MnuQuitter_Click(System.Object,System.Windows.RoutedEventArgs)">
	<summary>
 Menu quitter
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:HoMIWpF.Fonctions.IsBoolean(System.Object)">
	<summary>
 Vérifie si la valeur est un boolean
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:HoMIWpF.My.MyWpfExtension.Application">
	<summary>
 Retourne l'objet application pour l'application en cours d'exécution
 </summary>
</member><member name="P:HoMIWpF.My.MyWpfExtension.Computer">
	<summary>
 Retourne les informations relatives à l'ordinateur hôte.
 </summary>
</member><member name="P:HoMIWpF.My.MyWpfExtension.User">
	<summary>
 Retourne les informations relatives à l'utilisateur actuel. Si vous souhaitez exécuter l'application avec les 
 informations d'identification de l'utilisateur Windows, appelez My.User.InitializeWithWindowsUser().
 </summary>
</member><member name="P:HoMIWpF.My.MyWpfExtension.Log">
	<summary>
 Retourne le journal de l'application. L'écouteur peut être configuré par le fichier de configuration de l'application.
 </summary>
</member><member name="P:HoMIWpF.My.MyWpfExtension.Windows">
	<summary>
 Retourne la collection de fenêtres définie dans le projet.
 </summary>
</member><member name="T:HoMIWpF.My.MyWpfExtension">
	<summary>
 Module utilisé pour définir les propriétés qui sont disponibles dans l'espace de noms My pour WPF
 </summary>
	<remarks></remarks>
</member><member name="P:HoMIWpF.ClServer.Nom">
	<summary>
 Nom du serveur
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:HoMIWpF.ClServer.Adresse">
	<summary>
 Adresse du serveur
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:HoMIWpF.ClServer.Defaut">
	<summary>
 True si l'adresse est celle utilisée par défaut
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:HoMIWpF.ClServer">
	<summary>
 Classe utilisée dans la liste des serveurs 
 </summary>
	<remarks></remarks>
</member><member name="T:HoMIWpF.Appointment">
	<summary>
 This class is actually a stripped-down version of the actual Appointment class, which was generated using the 
 Linq-to-SQL Designer (essentially a Linq ORM to the Appointments table in the db)
 </summary>
	<remarks>Obviously, you should use your own appointment object/classes, and change the code-behind in MonthView.xaml.vb to
 support a List(Of T) where T is whatever the System.Type is for your appointment class.
 </remarks>
	<author>Kirk Davis, February 2009 (in like, 4 hours, and it shows!)</author>
</member><member name="P:HoMIWpF.My.Resources.Resources.ResourceManager">
	<summary>
  Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
</summary>
</member><member name="P:HoMIWpF.My.Resources.Resources.Culture">
	<summary>
  Remplace la propriété CurrentUICulture du thread actuel pour toutes
  les recherches de ressources à l'aide de cette classe de ressource fortement typée.
</summary>
</member><member name="T:HoMIWpF.My.Resources.Resources">
	<summary>
  Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
</summary>
</member>
</members>
</doc>